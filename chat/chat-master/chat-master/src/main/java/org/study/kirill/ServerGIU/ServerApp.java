package org.study.kirill.ServerGIU;

import com.intellij.uiDesigner.core.GridLayoutManager;
import org.study.kirill.Exeptions.ClientException;
import org.study.kirill.app.Server;
import org.study.kirill.netutils.MessageHandlerFactory;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.rmi.ServerException;


//todo rfr как сделать 2 jar файла в одном проекте?
public class ServerApp extends JFrame {
    private static String maxSessionNum = "4";
    private static String portNumber = "4444";
    private static String className = "org.study.kirill.app.PrintMessageHandlerFactory";
    private static MessageHandlerFactory mHFactory;
    private JPanel rootPanel;
    Server server;
    JButton launchButton;
    JButton stopButton;
    private JTextField portFiels;
    private JTextField maxSession;
    private JLabel session;
    private JLabel port;
    private JLabel statusLabel;

    ServerApp() {


        rootPanel = new JPanel();
        rootPanel.setLayout(new BorderLayout());
        launchButton = new JButton("launch");
        launchButton.addActionListener(new ServerApp.ButtonActionConnect());
        launchButton.setIcon(new ImageIcon(this.getClass().getResource("/1457625578_link_add.png")));


        stopButton = new JButton("stop");
        stopButton.addActionListener(new ServerApp.ButtonActionStop());
        stopButton.setIcon(new ImageIcon(this.getClass().getResource("/1457625556_cancel.png")));


        session = new JLabel("Max session number");
        maxSession = new JTextField(maxSessionNum, 5);
        maxSession.setEditable(true);

        port = new JLabel("port");
        portFiels = new JTextField(portNumber, 5);
        portFiels.setEditable(true);

        stopButton.setEnabled(false);
        rootPanel.add(launchButton);
        rootPanel.add(stopButton);

        GridBagConstraints startRight = new GridBagConstraints();
        startRight.insets = new Insets(0, 0, 0, 10);
        startRight.anchor = GridBagConstraints.EAST;
        startRight.fill = GridBagConstraints.HORIZONTAL;
        startRight.gridwidth = GridBagConstraints.REMAINDER;

        GridBagConstraints startCenter = new GridBagConstraints();
        startCenter.insets = new Insets(0, 10, 0, 10);
        startCenter.anchor = GridBagConstraints.PAGE_START;


        GridBagConstraints startLeft = new GridBagConstraints();
        startLeft.insets = new Insets(0, 10, 0, 10);
        startLeft.anchor = GridBagConstraints.WEST;

        JPanel systemData = new JPanel(new GridBagLayout());
        systemData.setLayout(new GridBagLayout());
        systemData.add(session, startLeft);
        systemData.add(maxSession, startRight);
        systemData.add(port, startLeft);
        systemData.add(portFiels, startRight);


        JPanel buttonData = new JPanel(new GridBagLayout());
        buttonData.setLayout(new GridBagLayout());
        buttonData.add(launchButton, startLeft);
        buttonData.add(stopButton, startRight);

        statusLabel = new JLabel("Server is not active");


        rootPanel.add(BorderLayout.NORTH, systemData);
        rootPanel.add(BorderLayout.CENTER, statusLabel);
        rootPanel.add(BorderLayout.SOUTH, buttonData);

        addListeners();

        this.add(rootPanel);
        this.setLocation(700, 500);
        this.setSize(300, 140);
        this.setTitle("Server");
        ImageIcon image = new ImageIcon(this.getClass().getResource("/1461249743_application_view_detail.png"));
        this.setIconImage(image.getImage());
        this.setResizable(false);
        this.setVisible(true);


    }


    private void addListeners() {

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if (server != null) {
                    server.shutdown();
                    System.exit(0);
                } else System.exit(0);
            }
        }); //закрытие окна через крестик
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    }

    class ButtonActionConnect implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {

            try {
                try {
                    int portNumber = Integer.parseInt(portFiels.getText().toString());
                    int maxSessionNum = Integer.parseInt(maxSession.getText().toString());
                } catch (NumberFormatException error) {
                    System.out.println("Ошибка ввода ....");
                }

                server = new Server(portNumber, maxSessionNum, className);
                server.launch();
                statusLabel.setText("Server is active");
                stopButton.setEnabled(true);
                launchButton.setEnabled(false);
                portFiels.setEnabled(false); //port
                maxSession.setEnabled(false);
            } catch (ServerException e1) {
                statusLabel.setText("Server is not active");
                stopButton.setEnabled(false);
                launchButton.setEnabled(true);
                port.setEnabled(true);
                maxSession.setEnabled(true);
                JOptionPane.showMessageDialog(new JFrame(), "Try another port");

            }


        }
    }

    class ButtonActionStop implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            server.shutdown();
            statusLabel.setText("Server is not active");
            stopButton.setEnabled(false);
            launchButton.setEnabled(true);
            port.setEnabled(true);
            maxSession.setEnabled(true);
        }
    }

    public static void main(String[] args) {
        new ServerApp();
    }

}
